@inject IGetListOfOperationsUseCase _getListOfOperationsUseCase
@using ApplicationLayer.DTO



<div class="page-container">

    <div class="btn-table-container  ">

        <div class="top-section mb-3 gap-3">
            <button class="btn-operation d-flex align-items-center justify-content-center gap-3">
                <i class="fa-solid fa-plus add-icon"></i>
                <span>Add Operation</span>
            </button>

            <button class="btn-device d-flex align-items-center justify-content-center gap-3">
                <i class="fa-solid fa-plus add-icon"></i>
                <span>Add Device</span>
            </button>
        </div>


        <div class="">




            <div class="table-container">
                <div class="table-responsive ">
                    <table class="table table-hover  ">
                        <thead class=" ">
                            <tr class="table-head text-white">
                                <th class=" text-nowrap">Image</th>
                                <th class=" text-nowrap">Order</th>
                                <th class=" text-nowrap">Operation</th>
                                <th class=" text-nowrap">Device Name</th>
                                <th class=" text-nowrap">Device Type</th>
                                <th class=" text-nowrap">Actions</th>


                            </tr>
                        </thead>
                        <tbody>



                            <OperationListItemComponent Refresh="RefreshData" Operations="Operations"></OperationListItemComponent>

                        </tbody>
                    </table>


                </div>

            </div>
        </div>

    </div>

</div>




@code 
{

    //For the grid
    public List<OperationResponse> Operations { get; set; } = new List<OperationResponse>();


    protected override async Task OnInitializedAsync()
    {
        await RefreshData();
    }

    private async Task RefreshData()
    {
        Operations = (await _getListOfOperationsUseCase.ExecuteAsync()).ToList(); 

    }
}
